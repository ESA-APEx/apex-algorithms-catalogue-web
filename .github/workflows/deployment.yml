name: Deployment

on:
  create:

env:
  DOCKER_IMAGE_NAME: apex-algorithms-catalogue-web
  DOCKER_REGISTRY_REGION: eu-nl
  DOCKER_REGISTRY_URL: swr.eu-nl.otc.t-systems.com

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-docker:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get release version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF_NAME#v*}" >> $GITHUB_ENV
          echo $RELEASE_VERSION
      - name: Build docker image
        run: docker build . --tag $DOCKER_IMAGE_NAME:$RELEASE_VERSION
      - name: Tag the image
        run: |
          docker tag $DOCKER_IMAGE_NAME:$RELEASE_VERSION $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$RELEASE_VERSION
          docker tag $DOCKER_IMAGE_NAME:$RELEASE_VERSION $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest
      - name: Docker login
        env:
          DOCKER_ACCESS_KEY: ${{ secrets.DockerAccessKey }}
          DOCKER_SECRET_KEY: ${{ secrets.DockerSecretKey }}
        run: |
          LOGIN_KEY=`printf "$DOCKER_ACCESS_KEY" | openssl dgst -binary -sha256 -hmac "$DOCKER_SECRET_KEY" | od -An -vtx1 | sed 's/[ \n]//g' | sed 'N;s/\n//'`
          docker login -u ${DOCKER_REGISTRY_REGION}@${DOCKER_ACCESS_KEY} -p ${LOGIN_KEY} ${DOCKER_REGISTRY_REGION}
      - name: Push image to registry
        run: |
          docker push $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$RELEASE_VERSION
          docker push $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest 
      - name: Clean up the local images
        run: |
          docker rmi $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$RELEASE_VERSION
          docker rmi $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest 
          docker rmi $DOCKER_IMAGE_NAME:$RELEASE_VERSION