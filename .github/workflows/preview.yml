name: Deploy PR preview

on:
  repository_dispatch:
    types: [catalogue-pr-updated, catalogue-pr-closed]

env:
  NODE_VERSION: 20.17.0
  PR_NUMBER: ${{ github.event.client_payload.pr_number }}
  ALGO_REF: ${{ github.event.client_payload.head_ref }}
  DATA_REPO: ${{ github.event.client_payload.head_repo }}

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read
  pull-requests: write

concurrency:
  group: preview-${{ github.event.client_payload.pr_number }}
  cancel-in-progress: true

jobs:
  build:
    if: ${{ github.event.action == 'catalogue-pr-updated' }}
    runs-on: ubuntu-latest
    outputs:
      pr-message: ${{ steps.pr-message.outputs.message }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Build new preview site
        run: BUILD_TARGET=preview npm run build
        env:
          ALGO_REF: ${{ env.ALGO_REF }}
          PR_NUMBER: ${{ env.PR_NUMBER }}
      - name: Setup new preview site
        run: |
          rm -rf preview/new
          npx make-dir preview/new
          mv dist/client preview/new
          mv preview/new/client "preview/new/pr-${PR_NUMBER}"
      - name: Get latest successful workflow run ID
        id: get-latest-run
        run: |
          WORKFLOW_ID=$(gh api \
            -H "Accept: application/vnd.github+json" \
            repos/${{ github.repository }}/actions/workflows/preview.yml/runs \
            --jq '.workflow_runs[] | select(.conclusion == "success") | .id' \
            | head -n 1)
          echo "run_id=$WORKFLOW_ID" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download current preview site
        uses: actions/download-artifact@v5
        with:
          name: github-pages
          run-id: ${{ steps.get-latest-run.outputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract current preview site
        run: |
          cp artifact.tar preview
          cd preview && tar xf artifact.tar
          rm artifact.tar
      - name: Merge new preview site with current preview site
        run: |
          rm preview/index.html
          cp -r preview/new/* preview/pr-preview
          mv "preview/pr-preview/pr-${PR_NUMBER}/pr-preview.html" preview/index.html
          rm -rf preview/new
      - name: Set PR message
        id: pr-message
        run: |
          MESSAGE=$(cat <<EOF
          ## 🔍 Catalogue's Preview Site Deployed

          Your changes have been deployed to the preview site:

          **🔗 Preview URL:** \${{ steps.deployment.outputs.page_url }}pr-preview/pr-${{ env.PR_NUMBER }}/

          This preview will be updated automatically when you push new changes to your PR.
          EOF
          )
          echo "message<<EOF" >> "$GITHUB_OUTPUT"
          echo "$MESSAGE" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          name: github-pages
          path: preview
          retention-days: 90

  cleanup:
    if: ${{ github.event.action == 'catalogue-pr-closed' }}
    runs-on: ubuntu-latest
    outputs:
      pr-message: ${{ steps.pr-message.outputs.message }}
    steps:
      - name: Get latest successful workflow run ID
        id: get-latest-run
        run: |
          WORKFLOW_ID=$(gh api \
            -H "Accept: application/vnd.github+json" \
            repos/${{ github.repository }}/actions/workflows/preview.yml/runs \
            --jq '.workflow_runs[] | select(.conclusion == "success") | .id' \
            | head -n 1)
          echo "run_id=$WORKFLOW_ID" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download current preview site
        uses: actions/download-artifact@v5
        with:
          name: github-pages
          run-id: ${{ steps.get-latest-run.outputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract current preview site
        run: |
          mkdir preview
          cp artifact.tar preview
          cd preview && tar xf artifact.tar
          rm artifact.tar
      - name: Remove preview for closed PR
        run: |
          rm -rf "preview/pr-preview/pr-${PR_NUMBER}"
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          name: github-pages
          path: preview
          retention-days: 90
      - name: Set PR message
        id: pr-message
        run: |
          MESSAGE=$(cat <<EOF
          ## 🧹 Catalogue's Preview Site Cleanup

          The preview site for this pull request has been cleaned up.

          If you need a new preview, please reopen the PR or create a new one.
          EOF
          )
          echo "message<<EOF" >> "$GITHUB_OUTPUT"
          echo "$MESSAGE" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          name: github-pages
          path: preview
          retention-days: 90

  deploy:
    needs: [build, cleanup]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Send comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.CATALOGUE_REPOSITORY_TOKEN }}
          repo: apex_algorithms
          number: ${{ env.PR_NUMBER }}
          header: preview-link
          message: ${{ needs.build.outputs.pr-message }}
